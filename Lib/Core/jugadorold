import pygame
import os
from Lib.Var.Constantes import Constantes  # Asegúrate de importar las constantes
from Lib.Core.CharacterInterface import CharacterInterface

class Jugador(CharacterInterface):
    def __init__(self):
        # Carga de imágenes
        images_path = os.path.join(Constantes.IMAGES_PATH)
        self.images = {
            "quieto": pygame.image.load(os.path.join(images_path, "1.png")).convert_alpha(),
            "mover": [pygame.image.load(os.path.join(images_path, f"{i}.png")).convert_alpha() for i in range(2, 5)],
            "saltar": [pygame.image.load(os.path.join(images_path, f"{i}.png")).convert_alpha() for i in range(5, 8)],
            "atacar": [pygame.image.load(os.path.join(images_path, f"{i}.png")).convert_alpha() for i in [8, 9, 10, 9]],
            "perder": [pygame.image.load(os.path.join(images_path, f"d{i}.png")).convert_alpha() for i in range(1, 3)]
        }
        
        # Configuración inicial
        self.rect = self.images["quieto"].get_rect(topleft=(100, 400))
        self.image = self.images["quieto"]
        self.image_index = 0
        self.is_jumping = False
        self.jump_speed = 15
        self.gravity = 1
        self.jump_offset = 0
        self.is_attacking = False  
        self.animacion_terminada = False       
        self.is_active = True

    def dibujar(self, surface):
        surface.blit(self.image, self.rect)

    def mover(self):
        if not self.is_jumping and not self.is_attacking:
            self.image_index = (self.image_index + 1) % len(self.images["mover"])
            self.image = self.images["mover"][self.image_index]

    def ganar(self):
        # Continua nomas
        pass

    def perder(self):
        if self.image_index < len(self.images["perder"]):
            self.image = self.images["perder"][self.image_index]
            self.image_index += 1
        else:
            self.animacion_terminada = True
            self.is_active = False

    def destruir(self):
        self.is_active = False

    def saltar(self):
        if not self.is_jumping:
            self.is_jumping = True
            self.jump_offset = -self.jump_speed
            self.image_index = 0
        if self.is_jumping:
            self.rect.y += self.jump_offset
            self.jump_offset += self.gravity
            if self.image_index < len(self.images["saltar"]):
                self.image = self.images["saltar"][self.image_index]
                self.image_index += 1
            if self.rect.y >= 400:  
                self.rect.y = 400
                self.is_jumping = False
                self.image_index = 0

    def atacar(self):
        if not self.is_attacking:
            self.is_attacking = True
            self.image_index = 0 
        if self.is_attacking:
            if self.image_index < len(self.images["atacar"]):
                self.image = self.images["atacar"][self.image_index]
                self.image_index += 1
            else:
                self.is_attacking = False
                self.image_index = 0
